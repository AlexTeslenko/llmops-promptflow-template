parameters:
 - name: exec_environment
   displayName: "Execution Environment"
   default: "dev"
 - name: flow_to_execute
   displayName: "type of model to execute"
 - name: IS_KUBERNETES_DEPLOYMENT
   displayName: "determine managed or kubernetes deployment"

stages:
    - stage: execute_prompt_experiment
      jobs:
      - job: Execute_ml_Job_Pipeline
        steps:
        - template: templates/configure_azureml_agent.yml

        - template: templates/get_connection_details.yml
        
        - template: templates/register_data_asset.yml
          parameters:
            step_name: "register training data"
            script_parameter: |
              python -m mlops.common.register_data_asset \
                --subscription_id "$(SUBSCRIPTION_ID)" \
                --data_purpose "training_data" \
                --flow_to_execute ${{ parameters.flow_to_execute }} \
                --environment_name ${{ parameters.exec_environment }}

        - template: templates/execute_mlops_pipeline.yml
          parameters:
            script_parameter: |
              python -m mlops.common.prompt_pipeline \
                --subscription_id "$(SUBSCRIPTION_ID)" \
                --build_id $(BUILD.BUILDID) \
                --stage ${{parameters.exec_environment}} \
                --flow_to_execute ${{ parameters.flow_to_execute }} \
                --data_purpose "training_data" \
                --output_file run_id.txt

        - task: AzureCLI@2
          displayName: Read prompt runs
          name: read_run_id
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(System.DefaultWorkingDirectory)
            inlineScript: |
              readarray arr <"run_id.txt"
              run_name=${arr[0]}
              echo $run_name
              echo "##vso[task.setvariable variable=RUN_NAME;isOutput=true;]$run_name"

        - template: templates/register_data_asset.yml
          parameters:
            step_name: "register test data"
            script_parameter: |
              python -m mlops.common.register_data_asset \
                --subscription_id "$(SUBSCRIPTION_ID)" \
                --data_purpose "test_data" \
                --flow_to_execute ${{ parameters.flow_to_execute }} \
                --environment_name ${{ parameters.exec_environment }}

        - template: templates/execute_mlops_pipeline.yml
          parameters:
            script_parameter: |
              python -m mlops.common.prompt_eval \
                --subscription_id $(SUBSCRIPTION_ID) \
                --build_id $(BUILD.BUILDID) \
                --stage "${{parameters.exec_environment}}" \
                --flow_to_execute ${{ parameters.flow_to_execute }} \
                --data_purpose "test_data" \
                --run_id "$(read_run_id.RUN_NAME)"

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/reports'
            artifactType: 'pipeline'
            artifactName: 'prompt_reports'

    - stage: deploy_prompts
      displayName: deploy_prompts
      dependsOn: 
      - execute_prompt_experiment
      variables:
      - name: run_id_from_submit_job
        value: $[ stageDependencies.execute_prompt_experiment.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ]
      jobs:
      - job: ApproveDeployment
        displayName: Approve for prompt deployment 
        pool: server    
        timeoutInMinutes: 60 # job times out in 60 minutes
        steps:   
        - task: ManualValidation@0
          timeoutInMinutes: 60 # task times out in 60 minutes
          inputs:
            notifyUsers: |
              replace@youremail.com
            instructions: "$(run_id_from_submit_job)"
            onTimeout: 'reject'
      
      - job: deploy_flow
        dependsOn: 
        - ApproveDeployment
        steps:
        - template: templates/get_connection_details.yml
      
        - template: templates/configure_azureml_agent.yml
      
        - template: templates/execute_python_code.yml
          parameters:
            step_name: "register flow" 
            script_parameter: |
              python -m mlops.common.deployment.register_model \
                --subscription_id $(SUBSCRIPTION_ID) \
                --flow_to_execute ${{ parameters.flow_to_execute }} \
                --output_file "model_version.txt" \
                --build_id $(Build.Buildid) \
                --env_type ${{parameters.exec_environment}}
      
        - task: AzureCLI@2
          displayName: Read model version
          name: read_model_version
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(System.DefaultWorkingDirectory)
            inlineScript: |
              readarray arr <"model_version.txt"
              model_version=${arr[0]}
              echo $model_version
              echo "##vso[task.setvariable variable=MODEL_VERSION;isOutput=true;]$model_version" 
              
        - ${{ if eq(parameters.IS_KUBERNETES_DEPLOYMENT, 'True') }}:
          - template: templates/kubernetes_deployment.yml  
            parameters:
              SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              flow_to_execute: ${{ parameters.flow_to_execute }}
              DEPLOY_ENVIRONMENT: ${{parameters.exec_environment}} 
              MODEL_VERSION: $(read_model_version.MODEL_VERSION)
              KEY_VAULT_NAME: $(KEYVAULT_NAME)

        - ${{ if eq(parameters.IS_KUBERNETES_DEPLOYMENT, 'False') }}:
          - template: templates/aml_real_deployment.yml 
            parameters:
              SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              flow_to_execute: ${{ parameters.flow_to_execute }}
              DEPLOY_ENVIRONMENT: ${{parameters.exec_environment}} 
              MODEL_VERSION: $(read_model_version.MODEL_VERSION)
              KEY_VAULT_NAME: $(KEYVAULT_NAME)