parameters:
- name: flow_to_execute
  type: string
- name: DEPLOY_ENVIRONMENT
  type: string
- name: CONNECTION_DETAILS
  type: string

steps:
- template: ./configure_azureml_agent.yml

- template: execute_python_code.yml
  parameters:
    step_name: "Create local Connection"
    script_parameter: |
      python -m llmops.common.prompt_local_aoai_connection \
        --env_name ${{ parameters.DEPLOY_ENVIRONMENT }} \
        --flow_to_execute ${{ parameters.flow_to_execute }} \
        --connection_details '${{ parameters.CONNECTION_DETAILS }}'

- task: AzureCLI@2
  displayName: Build Docker Image with flow artifacts
  continueOnError: false
  inputs: 
    azureSubscription: $(AZURE_RM_SVC_CONNECTION)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      set -e # fail on error
      config_path="./${{ parameters.flow_to_execute }}/llmops_config.json"
      env_name=${{ parameters.DEPLOY_ENVIRONMENT }}
      selected_object=$(jq ".envs[] | select(.ENV_NAME == \"$env_name\")" "$config_path")

      if [[ -n "$selected_object" ]]; then
        STANDARD_FLOW=$(echo "$selected_object" | jq -r '.STANDARD_FLOW_PATH')
        
        pf flow build --source "./${{ parameters.flow_to_execute }}/$STANDARD_FLOW" --output "./${{ parameters.flow_to_execute }}/docker"  --format docker 

        mv "./${{ parameters.flow_to_execute }}/environment/Dockerfile" "./${{ parameters.flow_to_execute }}/docker/Dockerfile"

        docker build -t localpf "./${{ parameters.flow_to_execute }}/docker" --no-cache
        
        docker images

        deploy_config="./${{ parameters.flow_to_execute }}/configs/deployment_config.json"
        con_object=$(jq ".webapp_endpoint[] | select(.ENV_NAME == \"$env_name\")" "$deploy_config")
        #CONNECTION_NAME=$(echo "$con_object" | jq -r '.CONNECTION_NAMES[]')
        read -r -a connection_names <<< "$(echo "$con_object" | jq -r '.CONNECTION_NAMES | join(" ")')"
        echo $connection_names
        result_string=""

        for name in "${connection_names[@]}"; do
            echo $name
            api_key=$(echo '${{ parameters.CONNECTION_DETAILS }}' | jq -r --arg name "$name" '.[] | select(.name == $name) | .api_key')
            uppercase_name="${name^^}"
            modified_name="${uppercase_name}_API_KEY"
            result_string+=" -e $modified_name=$api_key"
        done
        echo "$result_string"
        IFS=' ' read -r -a docker_args <<< "$result_string"
        docker_args+=(-m 512m --memory-reservation=256m --cpus=2 -dp 8080:8080 localpf:latest )
        docker run "${docker_args[@]}"

        sleep 15

        docker ps -a
        
        chmod +x "./${{ parameters.flow_to_execute }}/sample-request.json" 
        
        file_contents=$(<./${{ parameters.flow_to_execute }}/sample-request.json)
        echo "$file_contents"
        
        python -m llmops.common.deployment.test_local_flow \
                --flow_to_execute ${{ parameters.flow_to_execute }}
      else
        echo "Object in config file not found"
      fi
